<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Where is Putin? | Memory game</title>
    @Styles.Render("~/Content/css")
   

    <style>
        div#memory_board {
           
          
            width: 1100px;
           
           
           
        }

            div#memory_board > div {
                background: url(/images/russian-flag.jpg) no-repeat;
                border: #000 1px solid;
                width: 150px;
                height: 150px;
                float: left;
                margin: 12px 31px 12px 0;
                
                position:relative;
                background-size: 100% 100% !important;
                background-repeat:no-repeat;
                text-align: center;
               
            }
    </style>
    <script>
       
        var memory_array = [
           
       
          "3.jpg", "3.jpg",
            "4.jpg", "4.jpg",
              "5.jpg", "5.jpg",
                "6.jpg", "6.jpg",
                  "7.jpg", "7.jpg",
                    "8.jpg", "8.jpg",
                    "9.jpg", "9.jpg",
                    "10.jpg", "10.jpg",
                    "11.jpg", "11.jpg",
                    "12.jpg", "12.jpg",
                   
                     "14.jpg", "14.jpg",
                      "15.jpg", "15.jpg",

        ];
        var memory_values = [];
        var memory_tile_ids = [];
        var tiles_flipped = 0;
        Array.prototype.memory_tile_shuffle = function () {
            var i = this.length, j, temp;
            while (--i > 0) {
                j = Math.floor(Math.random() * (i + 1));
                temp = this[j];
                this[j] = this[i];
                this[i] = temp;
            }
        }
        function newBoard() {
            tiles_flipped = 0;
            var output = '';
            memory_array.memory_tile_shuffle();
            for (var i = 0; i < memory_array.length; i++) {
                output += '<div id="tile_' + i + '" onclick="memoryFlipTile(this,\'' + memory_array[i] + '\')"></div>';
            }
            document.getElementById('memory_board').innerHTML = output;
        }
        function memoryFlipTile(tile, val) {
            if (tile.innerHTML == "" && memory_values.length < 2) {
                debugger;
                tile.style.background = 'url(/Images/' + val + ') no-repeat'
                //tile.style.background = '#FFF';
                //tile.innerHTML = val;
                if (memory_values.length == 0) {
                    memory_values.push(val);
                    memory_tile_ids.push(tile.id);
                } else if (memory_values.length == 1) {
                    memory_values.push(val);
                    memory_tile_ids.push(tile.id);
                    if (memory_values[0] == memory_values[1]) {
                        tiles_flipped += 2;
                        // Clear both arrays
                        memory_values = [];
                        memory_tile_ids = [];
                        // Check to see if the whole board is cleared
                        if (tiles_flipped == memory_array.length) {
                            alert("Well done - you found Putin!... generating new board");
                            document.getElementById('memory_board').innerHTML = "";
                            newBoard();
                        }
                    } else {
                        function flip2Back() {
                            // Flip the 2 tiles back over
                            var tile_1 = document.getElementById(memory_tile_ids[0]);
                            var tile_2 = document.getElementById(memory_tile_ids[1]);
                            tile_1.style.background = 'url(/images/russian-flag.jpg) no-repeat';
                            tile_1.innerHTML = "";
                            tile_2.style.background = 'url(/images/russian-flag.jpg) no-repeat';
                            tile_2.innerHTML = "";
                            // Clear both arrays
                            memory_values = [];
                            memory_tile_ids = [];
                        }
                        setTimeout(flip2Back, 1000);
                    }
                }
            }
        }
    </script>






</head>
<body>

    <div class="content-wrapper">
        @RenderBody()
       
    </div>

    @RenderSection("scripts", required: false)

    <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-60784947-1', 'auto');
  ga('send', 'pageview');

    </script>



</body>
</html>
